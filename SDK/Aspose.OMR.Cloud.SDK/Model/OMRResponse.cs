/*
 * Copyright (c) 2018 Aspose Pty Ltd. All Rights Reserved.
 *
 * Licensed under the MIT (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://github.com/aspose-omr-cloud/aspose-omr-cloud-dotnet/blob/master/LICENSE
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Aspose.OMR for Cloud API Reference
 * Aspose.OMR for Cloud helps performing optical mark recognition in the cloud
 *
 * OpenAPI spec version: 1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


using System;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Com.Aspose.Omr.Model {

  /// <summary>
  /// Represents information about response after OMR.
  /// </summary>
  public class OMRResponse {
    /// <summary>
    /// Indicates operation's status
    /// </summary>
    /// <value>Indicates operation's status</value>
    public string Status { get; set; }

    /// <summary>
    /// Integer field that indicates whether any critical errors occured during task execution
    /// </summary>
    /// <value>Integer field that indicates whether any critical errors occured during task execution</value>
    public int? ErrorCode { get; set; }

    /// <summary>
    /// String description of occured critical error. Empty if no critical errors occured
    /// </summary>
    /// <value>String description of occured critical error. Empty if no critical errors occured</value>
    public string ErrorText { get; set; }

    /// <summary>
    /// Payload
    /// </summary>
    /// <value>Payload</value>
    public Payload Payload { get; set; }

    /// <summary>
    /// Server statistics
    /// </summary>
    /// <value>Server statistics</value>
    public ServerStat ServerStat { get; set; }


    /// <summary>
    /// Get the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()  {
      var sb = new StringBuilder();
      sb.Append("class OMRResponse {\n");
      sb.Append("  Status: ").Append(Status).Append("\n");
      sb.Append("  ErrorCode: ").Append(ErrorCode).Append("\n");
      sb.Append("  ErrorText: ").Append(ErrorText).Append("\n");
      sb.Append("  Payload: ").Append(Payload).Append("\n");
      sb.Append("  ServerStat: ").Append(ServerStat).Append("\n");
      sb.Append("}\n");
      return sb.ToString();
    }


}
}
